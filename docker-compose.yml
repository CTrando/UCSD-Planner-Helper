version: '3.0'

services:
  #sdschedule-database:
  #  container_name: sdschedule-database
  #  image: mariadb:latest
  #  environment:
  #    - "MYSQL_ROOT_PASSWORD=password" 
  #    - "MYSQL_DATABASE=classes"
  #  volumes:
  #    - sdschedule-data:/var/lib/mysql
  #sdschedule-database-mongodb:
  #  container_name: sdschedule-database-mongodb
  #  image: mongo:latest
  #  environment:
  #    - "MONGO_INITDB_ROOT_USERNAME=root"
  #    - "MONGO_INITDB_ROOT_PASSWORD=password" 
  #    - "MONGO_INITDB_DATABASE=classes"
  #  volumes:
  #    - sdschedule-data-mongodb:/data/db
  sdschedule-database-redis:
    # TODO: make persistent, AOF, no fsync
    # About warnings:
    # https://github.com/docker-library/redis/issues/19
    # https://github.com/docker-library/redis/issues/55
    # They are host-level config
    container_name: sdschedule-database-redis
    image: redis:latest
    environment:
      - "REDIS_PASSWORD=password"
    command: [
      "sh", "-c",
      '
       docker-entrypoint.sh
       --requirepass "$$REDIS_PASSWORD"
       --appendonly yes
      '
    ]
    volumes:
      - sdschedule-data-redis:/data
  sdschedule-backend:
    container_name: sdschedule-backend
    build: backend 
    ports:
      - "5000:5000"
    volumes:
      - "./backend:/app/"
    depends_on: 
      # - sdschedule-database
      # - sdschedule-database-mongodb
      - sdschedule-database-redis
    environment:
      - "PYTHONUNBUFFERED=0"
      - "SDSCHEDULE_SCRAPE=${SDSCHEDULE_SCRAPE}"
  sdschedule-frontend:
    container_name: sdschedule-frontend
    build: frontend
    ports: 
      - "3000:3000"
    volumes:
      - "./frontend/src:/app/src"
      - "./frontend/public:/app/public"
    depends_on: 
      - sdschedule-backend 
volumes:
  #sdschedule-data:
  #sdschedule-data-mongodb:
  sdschedule-data-redis: